一、图片优化
1. 用工具进行图片压缩：
   （1）压缩png
       node-pngquant-native
       跨平台，压缩比高，压缩png24非常好
   （2）压缩jpg
       jpetran
       跨平台，有linux、Mac、Windows解决方案
   （3）压缩gif
       gifsicle
       通过改变每帧比例，减少gif文件大小，同时可以使用透明来达到更小的文件大小，目前公认的解决方案
2. 图片尺寸随网络环境变化
   不同网络环境下，加载不同尺寸和像素的图片，通过在图片URL后缀加不同参数改变
3. 响应式图片
   （1）javascript绑定事件检测窗口大小
   （2） css媒体查询
        @media screen and （max-width: 640px） {
            my_image{width: 640px;}
        }
    (3) img标签属性
        <img srcset='img-320w.jpg, img-640w.jpg 2x, img-960w.jpg 3x' src='img-960w.jpg' alt='img'>
        x描述符： 表示图像的设备像素比
4. 逐步加载图像
   使用统一占位符
   使用低质量图像占位符
   基于svg的图像占位符
5. 其他方式
   web font 代替图片
   data URI代替图片： base64
   雪碧图
二、图片服务器自动优化
1. 概念： 图片服务器自动化优化是可以再图片URL链接上增加不同特殊参数，服务器自动化生成不同格式、大小、质量、特殊能力等的图片
   处理方式：
   图片裁剪、填充、拉伸、缩放
   图片格式转换，支持jpg，webp等，支持不同的图片压缩率
   图片处理，添加图片水印、高斯模糊、重心处理、裁剪边框等
   AI能力，鉴黄、智能抠图、智能配色、智能合成等AI功能
2. 技术实现
   （1）将压缩图片、裁剪、格式转换等本地工具部署到线上图片服务器集群上
   （2）内部运营或者外网用户上传本地图片至图片服务器后，服务器默认处理转换成多种图片格式， 并推送至图片CDN服务器上
   （3）图片服务器对外开放多个域名，同事对各个业务线开放不同的业务路径
   （4）外网用户请求带特殊参数的图片URL时，图片服务器根据URL中不同的参数类型，从本地缓存中取得，或者实时对图片进行即时处理，返回给客户端
      （比如链接中500 * 500改成100 * 100，.jpg改成.webp,后面接q10，质量压缩成百分之10等等）
   
   
   
   
   
   
   


